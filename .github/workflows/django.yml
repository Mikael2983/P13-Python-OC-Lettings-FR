name: Django CI

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      max-parallel: 4
      matrix:
        python-version: ["3.10", "3.11", "3.12"]
    env:
      OC_LETTINGS_SECRET_KEY: ${{ secrets.OC_LETTINGS_SECRET_KEY }}
      OC_LETTINGS_SENTRY_DNS: ${{ secrets.SENTRY_DNS_OC_LETTINGS }}
      DEBUG: False

    steps:
      - uses: actions/checkout@v4
  
      - name: Set up Python
        uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.python-version }}
  
      - name: Cache pip
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-
  
      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
  
      - name: Apply migrations
        run: python manage.py migrate

  
  tests:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.10", "3.11", "3.12"]
    needs: build
    env:
      OC_LETTINGS_SECRET_KEY: ${{ secrets.OC_LETTINGS_SECRET_KEY }}
      DEBUG: True

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.python-version }}

      - name: Cache pip
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install Dependencies
        run: pip install -r requirements.txt

      - name: Run Tests
        run: pytest

  quality:
    runs-on: ubuntu-latest
    needs: build
    continue-on-error: true
    steps:
      - uses: actions/checkout@v4
      - name: Run Code Climate analysis
        run: |
          mkdir codequality-results
          docker run \
            --env CODECLIMATE_CODE="$PWD" \
            --volume "$PWD":/code \
            --volume /var/run/docker.sock:/var/run/docker.sock \
            --volume /tmp/cc:/tmp/cc \
            codeclimate/codeclimate analyze -f html > ./codequality-results/index.html
      - name: Upload code quality results
        uses: actions/upload-artifact@v4
        with:
          name: code-quality-report
          path: codequality-results/
          
